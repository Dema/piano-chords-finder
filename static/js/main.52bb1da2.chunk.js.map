{"version":3,"sources":["features/chord-finder/pages/index.module.css","features/core/app/index.module.css","features/chord-finder/molecules/ChordsList/index.module.css","features/chord-finder/molecules/DeviceSelection/index.module.css","features/chord-finder/molecules/ChordsList/index.tsx","features/chord-finder/molecules/DeviceSelection/index.tsx","features/chord-finder/pages/Index.tsx","features/core/app/index.tsx","index.tsx"],"names":["module","exports","ChordsList","chords","length","className","css","chordsContainer","chordsList","map","s","chord","get","key","aliases","a","tonic","join","DeviceSelection","value","items","onChange","selected","indexOf","undefined","handleChange","useCallback","e","Number","currentTarget","inputDevice","name","select1","item","idx","noop","ChordsFinder","useState","midiEnabled","setMidiEnabled","first","last","noteRange","setNoteRange","selectedInputDevice","setSelectedInputDevice","availableDevices","setAvailableDevices","notesPlaying","setNotesPlaying","useEffect","listener","windowWidth","window","innerWidth","pianoKeys","Math","floor","max","min","addEventListener","removeEventListener","connectedListener","port","type","devices","filter","d","id","concat","disconnectedListener","WebMidi","enable","err","console","log","addListener","enabled","removeListener","disable","noteOnListener","notes","note","sort","b","number","noteOffListener","n","detect","container","pianoConainer","activeNotes","onPlayNoteInput","onStopNoteInput","playNote","renderNoteLabel","midiNumber","isAccidental","cn","noteName","sharps","midiToNoteName","pitchClass","stopNote","octave","App","main","nav","sectionLink","to","element","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bb1da2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"pages_container__22zDm\",\"notes\":\"pages_notes__303vF\",\"pianoConainer\":\"pages_pianoConainer__11y_f\",\"noteName\":\"pages_noteName__3iiER\",\"sharps\":\"pages_sharps__WLgQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__1vT7R\",\"nav\":\"app_nav__3zTYy\",\"sectionLink\":\"app_sectionLink__xi3kE\",\"container\":\"app_container__3NtrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordsList\":\"ChordsList_chordsList__1MB3s\",\"chordsContainer\":\"ChordsList_chordsContainer__3Kjf0\",\"chord\":\"ChordsList_chord__SgWJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputDevice\":\"DeviceSelection_inputDevice__1OayH\",\"select1\":\"DeviceSelection_select1__1XwIb\"};","import { get } from \"@tonaljs/chord\";\nimport React, { FC } from \"react\";\nimport css from \"./index.module.css\";\n\ntype Props = { chords: string[] };\nconst ChordsList: FC<Props> = ({ chords }) => {\n  return chords.length > 0 ? (\n    <div className={css.chordsContainer}>\n      Chords:\n      <ul className={css.chordsList}>\n        {chords.map((s) => {\n          const chord = get(s);\n          return (\n            <li key={s} className={css.chord}>\n              <span>\n                {s}\n                {chord?.aliases.length > 0 ? (\n                  <>\n                    , also known as:{\" \"}\n                    {chord?.aliases\n                      .map((a) => (chord?.tonic ?? \"\") + a)\n                      .join(\", \")}\n                  </>\n                ) : null}\n              </span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  ) : null;\n};\n\nexport default ChordsList;\n","/* eslint-disable jsx-a11y/no-onchange */\nimport { Input } from \"webmidi\";\n\nimport React, { FC, SyntheticEvent, useCallback } from \"react\";\nimport css from \"./index.module.css\";\n\ntype Props = {\n  items: Input[];\n  value: Input | null;\n  onChange: (value: Input) => void;\n};\nconst DeviceSelection: FC<Props> = ({ value, items, onChange }) => {\n  const selected = value ? items.indexOf(value) : undefined;\n  const handleChange = useCallback(\n    (e: SyntheticEvent<HTMLSelectElement>) => {\n      onChange(items[Number(e.currentTarget.value)]);\n    },\n    [items, onChange]\n  );\n\n  return (\n    <div className={css.inputDevice}>\n      <span>\n        Connected device:\n        <br />\n        {value?.name ?? \"Not Connected\"}\n      </span>\n      <select className={css.select1} onChange={handleChange} value={selected}>\n        {items.map((item, idx) => (\n          <option key={idx} value={idx}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default DeviceSelection;\n","import \"react-piano/dist/styles.css\";\nimport { ControlledPiano } from \"react-piano\";\nimport { detect } from \"@tonaljs/chord-detect\";\nimport { midiToNoteName } from \"@tonaljs/midi\";\nimport ChordsList from \"../molecules/ChordsList\";\nimport DeviceSelection from \"../molecules/DeviceSelection\";\nimport React, { useEffect, useState } from \"react\";\nimport WebMidi, {\n  IEventNote,\n  Input,\n  InputEventNoteoff,\n  InputEventNoteon,\n  WebMidiEventConnected,\n  WebMidiEventDisconnected,\n} from \"webmidi\";\nimport cn from \"classnames\";\nimport css from \"./index.module.css\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst PIANO_KEY_WIDTH_PX = 40;\nconst MIDDLE_C_MIDI_NUM = 60;\nconst LOWEST_NOTE = 21;\nconst HIGHEST_NOTE = 127;\n\nfunction ChordsFinder() {\n  const [midiEnabled, setMidiEnabled] = useState(false);\n  const [noteRange, setNoteRange] = useState<{ first: number; last: number }>({\n    first: 60,\n    last: 62,\n  });\n  const [selectedInputDevice, setSelectedInputDevice] = useState<Input | null>(\n    null\n  );\n  const [availableDevices, setAvailableDevices] = useState<Input[]>([]);\n\n  const [notesPlaying, setNotesPlaying] = useState<IEventNote[]>([]);\n\n  useEffect(() => {\n    const listener = () => {\n      const windowWidth = window.innerWidth;\n      let pianoKeys = Math.floor(windowWidth / PIANO_KEY_WIDTH_PX);\n      if (pianoKeys % 2 === 1) {\n        pianoKeys++;\n      }\n\n      setNoteRange({\n        first: Math.max(LOWEST_NOTE, MIDDLE_C_MIDI_NUM - pianoKeys),\n        last: Math.min(HIGHEST_NOTE, MIDDLE_C_MIDI_NUM + Math.floor(pianoKeys)),\n      });\n    };\n    listener();\n    window.addEventListener(\"resize\", listener);\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (selectedInputDevice == null && availableDevices.length > 0) {\n      setSelectedInputDevice(availableDevices[0]);\n    }\n  }, [availableDevices, selectedInputDevice]);\n\n  useEffect(() => {\n    const connectedListener = (e: WebMidiEventConnected) => {\n      if (e.port.type === \"input\") {\n        setAvailableDevices((devices) =>\n          devices.filter((d) => d.id !== e.port.id).concat(e.port as Input)\n        );\n      }\n    };\n    const disconnectedListener = (e: WebMidiEventDisconnected) => {\n      if (e.port.type === \"input\") {\n        setAvailableDevices((devices) =>\n          devices.filter((d) => d.id !== e.port.id)\n        );\n      }\n    };\n\n    WebMidi.enable((err) => {\n      if (!err) {\n        setMidiEnabled(true);\n        WebMidi.addListener(\"connected\", connectedListener);\n        WebMidi.addListener(\"disconnected\", disconnectedListener);\n      } else {\n        // eslint-disable-next-line no-console\n        console.log(err);\n      }\n    });\n    return () => {\n      if (WebMidi.enabled) {\n        WebMidi.removeListener(\"connected\", connectedListener);\n        WebMidi.removeListener(\"disconnected\", disconnectedListener);\n      }\n      WebMidi.disable();\n    };\n  }, [selectedInputDevice]);\n\n  useEffect(() => {\n    if (midiEnabled && selectedInputDevice) {\n      const noteOnListener = (e: InputEventNoteon) => {\n        setNotesPlaying((notes) =>\n          notes.concat(e.note).sort((a, b) => a.number - b.number)\n        );\n      };\n      const noteOffListener = (e: InputEventNoteoff) => {\n        setNotesPlaying((notes) =>\n          notes.filter((n) => n.number !== e.note.number)\n        );\n      };\n      selectedInputDevice.addListener(\"noteon\", \"all\", noteOnListener);\n      selectedInputDevice.addListener(\"noteoff\", \"all\", noteOffListener);\n      return () => {\n        selectedInputDevice.removeListener(\"noteon\", \"all\", noteOnListener);\n        selectedInputDevice.removeListener(\"noteoff\", \"all\", noteOffListener);\n      };\n    }\n    return undefined;\n  }, [selectedInputDevice, midiEnabled]);\n\n  const chords = detect(notesPlaying.map((n) => n.name));\n\n  return (\n    <div className={css.container}>\n      <DeviceSelection\n        items={availableDevices}\n        onChange={setSelectedInputDevice}\n        value={selectedInputDevice}\n      />\n      <div className={css.pianoConainer}>\n        <ControlledPiano\n          key={`${noteRange.first}:${noteRange.last}`}\n          activeNotes={notesPlaying.map((n) => n.number)}\n          noteRange={noteRange}\n          onPlayNoteInput={noop}\n          onStopNoteInput={noop}\n          playNote={noop}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          renderNoteLabel={({ midiNumber, isAccidental }: any) => (\n            <div className={cn(css.noteName, { [css.sharps]: isAccidental })}>\n              {midiToNoteName(midiNumber, {\n                pitchClass: isAccidental,\n                sharps: true,\n              })}\n            </div>\n          )}\n          stopNote={noop}\n        />\n      </div>\n      <div className={css.notes}>\n        Notes: {notesPlaying.map((n) => n.name + n.octave).join(\", \")}\n      </div>\n      <ChordsList chords={chords} />\n    </div>\n  );\n}\n\nexport default ChordsFinder;\n","import { Link, Route, Routes } from \"react-router-dom\";\nimport ChordsFinder from \"../../chord-finder/pages/Index\";\nimport React, { FC } from \"react\";\nimport css from \"./index.module.css\";\n\nconst App: FC = () => {\n  return (\n    <div className={css.main}>\n      <nav className={css.nav}>\n        <Link className={css.sectionLink} to=\"/chords-finder\">\n          Chords Finder\n        </Link>\n        <Link className={css.sectionLink} to=\"/sight-reading\">\n          Sight Reading\n        </Link>\n      </nav>\n      <div className={css.container}>\n        <Routes>\n          <Route element={<ChordsFinder />} path=\"/chords-finder/*\" />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./features/core/app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}